@page "/Currencies"
@using FinancialPeace.Web.Models
@using FinancialPeace.Web.HttpClients
@using FinancialPeace.Web.Models.Requests
@inject CurrenciesHttpClient HttpClient
@inject IToastService ToastService

<div>
    <h1>Currencies</h1>
    
    <div class="btn-group">
        <button class="btn btn-primary" @onclick="ShowModal">Add Currency</button>
    </div>
</div>

<br />

<div>
    @if (_currencies != null)
    {
        <table class="table">
            <thead>
            <tr>
                <th>Name</th>
                <th>Country</th>
                <th>Country Currency Code</th>
                <th>Rand Exchange Rate</th>
            </tr>
            </thead>
            <tbody>
            @foreach (var currency in _currencies)
            {
                <tr>
                    <td>@currency.Name</td>
                    <td>@currency.Country</td>
                    <td>@currency.CountryCurrencyCode</td>
                    <td>@currency.RandExchangeRate</td>
                </tr>
            }
            </tbody>
        </table>
    }
    else
    {
        <p>
            <em>Loading...</em>
        </p>
    }
</div>

@code {
    [CascadingParameter] public IModalService Modal { get; set; }
    
    private IEnumerable<Currency> _currencies;

    protected override async Task OnInitializedAsync()
    {
        _currencies = await HttpClient.GetCurrenciesAsync();
    }
    
    private async Task ShowModal()
    {
        var formModal = Modal.Show<AddCurrencyModal>("Add a new currency");
        var result = await formModal.Result;

        if (!result.Cancelled)
        {
            await AddCurrencyAsync(result.Data as AddCurrencyRequest);
        }
    }

    private async Task AddCurrencyAsync(AddCurrencyRequest request)
    {
        try
        {
            await HttpClient.AddCurrencyAsync(request);
            ToastService.ShowSuccess("Currency added successfully.");
            _currencies = await HttpClient.GetCurrenciesAsync();
        }
        catch
        {
            ToastService.ShowError("An error occurred while adding the currency.");
        }
    }
}